{"name":"PHP array pagination class","tagline":"PHP Array Paginator","body":"## PHP array pagination\r\n\r\nThis is a basic script to take an array and and generate a paginated list of items. This is quite an obscure example because a real world example would probably include lots more data.\r\n\r\nI'd also like to say, if your working with databases then I would suggest using a database pagination script that uses limits etc to optimise the speed of the query etc. If your looking to paginate a small data set then this should be fine.\r\n\r\nPretty simple setup:\r\n\r\n### Include the class:\r\n\r\n```\r\n// Include the pagination class\r\ninclude 'pagination.class.php';\r\n```\r\n\r\n### Here i'm throwing in some test date (you will need to provide your own)\r\n\r\n```\r\n// some example data\r\nforeach (range(1, 100) as $value) {\r\n  $products[] = array(\r\n  'Product' => 'Product '.$value,\r\n  'Price' => rand(100, 1000),\r\n  );\r\n}\r\n```\r\n\r\n### Then this is how to output of the page data and page numbers.\r\n\r\n```\r\n// If we have an array with items\r\nif (count($products)) {\r\n    // Create the pagination object\r\n    $pagination = new pagination($products, (isset($_GET['page']) ? $_GET['page'] : 1), 15);\r\n    // Parse through the pagination class\r\n    $productPages = $pagination->getResults();\r\n    // If we have items \r\n    if (count($productPages) != 0) {\r\n        // Create the page numbers\r\n        echo $pageNumbers = '<div class=\"numbers\">'.$pagination->getLinks().'</div>';\r\n        // Loop through all the items in the array\r\n        foreach ($productPages as $productArray) {\r\n            // Show the information about the item\r\n            echo '<p><b>'.$productArray['Product'].'</b> &nbsp; &pound;'.$productArray['Price'].'</p>';\r\n        }\r\n        // print out the page numbers beneath the results\r\n        echo $pageNumbers;\r\n    }\r\n}\r\n```\r\n\r\nThere are two other configurations that currently exist:\r\n\r\nIf you would like to show \"<< first\" and \"last >>\" links to take you to the first and last page.\r\n\r\n```\r\n$pagination->setShowFirstAndLast(true);\r\n````\r\n\r\nThe default separator for the page numbers is an empty string, you can overwrite this to be anything you like.\r\n\r\n````\r\n$pagination->setMainSeperator(' | ');\r\n```\r\n\r\nIt's pretty simple.","google":"UA-3968273-1","note":"Don't delete this file! It's used internally to help with page regeneration."}